name: Build and Push Docker Image

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect project type
        id: project-type
        run: |
          if [ -f "requirements.txt" ] || [ -f "setup.py" ]; then
            echo "type=python" >> $GITHUB_OUTPUT
          elif [ -f "go.mod" ] || [ -f "main.go" ]; then
            echo "type=go" >> $GITHUB_OUTPUT
          else
            echo "type=unknown" >> $GITHUB_OUTPUT
          fi

      - name: Set up Python
        if: steps.project-type.outputs.type == 'python'
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Python dependencies
        if: steps.project-type.outputs.type == 'python'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up Go
        if: steps.project-type.outputs.type == 'go'
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Build Go binary
        if: steps.project-type.outputs.type == 'go'
        run: |
          go mod download
          go build -v -o ddns .

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max